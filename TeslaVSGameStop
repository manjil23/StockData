import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

#Tesla Historical Data
Tesla = yf.Ticker("TSLA")
TeslaShareData =Tesla.history(period="max")
TeslaShareData.reset_index(inplace=True)
print(TeslaShareData.head())
#Tesla Revenue
url = " https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue"
Teslahtmldata = requests.get(url,headers ={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}).text
beautiful_soup = BeautifulSoup(Teslahtmldata, 'html5lib')
tables = beautiful_soup.find_all('table')
TeslaRevenue =pd.DataFrame(columns=["Date", "Revenue"])
for row in tables[1].tbody.find_all("tr"):
    col =row.find_all("td")
    if(col !=[]):
        date = col[0].text
        revenue = col[1].text
        TeslaRevenue = TeslaRevenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
print(TeslaRevenue)
#Remove Null or Empty Cells
TeslaRevenue["Revenue"] = TeslaRevenue['Revenue'].str.replace(',|\$',"")
TeslaRevenue.dropna(inplace=True)
TeslaRevenue = TeslaRevenue[TeslaRevenue['Revenue'] != ""]
print(TeslaRevenue.tail())
#GameStop Historical Data
GameStop = yf.Ticker("GME")
GameStopShareData=GameStop.history(period="max")
GameStopShareData.reset_index(inplace=True)
GameStopShareData.head()
url = "https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue"
GameStopHtmlData = requests.get(url,headers ={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}).text
beautiful_soup = BeautifulSoup(GameStopHtmlData, 'html5lib')
tables = beautiful_soup.find_all('table')
GameStopRevenue = pd.DataFrame(columns=["Date", "Revenue"])
for row in tables[1].tbody.find_all("tr"):
    col =row.find_all("td")
    if(col !=[]):
        date = col[0].text
        revenue = col[1].text
        GameStopRevenue = GameStopRevenue.append({"Date":date, "Revenue":revenue}, ignore_index=True)
print(GameStopRevenue)
GameStopRevenue["Revenue"] = GameStopRevenue['Revenue'].str.replace(',|\$',"")
GameStopRevenue.dropna(inplace=True)
TeslaShareData = GameStopRevenue[GameStopRevenue['Revenue'] != ""]
#Graphing Function
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021--06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()
make_graph(TeslaShareData, TeslaRevenue, 'Tesla Historical Data Comparing with its Revenue Over time')
#make_graph(GameStopShareData, GameStopRevenue, 'GameStop Historical Data Compare with its Revenue Over time')
